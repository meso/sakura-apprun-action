# ビルドステージ
FROM node:22-alpine AS builder

WORKDIR /app

# package*.jsonをコピー（package-lock.jsonも含む）
COPY package*.json ./

# 全ての依存関係をインストール（devDependenciesを含む）
RUN npm ci || npm install

# アプリケーションのソースをコピー
COPY . .

# フレームワーク検出とビルド
RUN if [ -f package.json ]; then \
      if grep -q '"next"' package.json; then \
        echo "Building Next.js app..." && npm run build; \
      elif grep -q '"@react-router/dev"' package.json || grep -q '"react-router"' package.json; then \
        echo "Building React Router app..." && npm run build; \
      else \
        echo "Building HonoX app..." && npm run build; \
      fi \
    fi

# 存在しないディレクトリを作成（COPYエラーを防ぐため）
RUN mkdir -p dist .next build public

# 実行ステージ
FROM node:22-alpine

WORKDIR /app

# package*.jsonをコピー
COPY package*.json ./

# 本番用の依存関係のみインストール
RUN npm ci --only=production || npm install --production

# フレームワーク別の成果物をコピー
# 全てのフレームワークのビルド成果物をコピー（ビルダーステージですべて作成済み）
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/build ./build
COPY --from=builder /app/public ./public

# ビルド時引数でポートを受け取る
ARG PORT=3000

# 環境変数
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=$PORT

# ポートを公開（デフォルト3000、ビルド時に変更可能）
EXPOSE $PORT

# すべてのフレームワークで npm start を使用
CMD ["npm", "start"]